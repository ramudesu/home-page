@use "sass:math";
@use "./functions" as *;

@mixin fz($size, $static: false, $fz: 10) {
  @if $static {
    @include media_wide {
      font-size: $size * 1px;
    }
    @include media_narrow {
      font-size: rem($size);
    }
  } @else {
    font-size: rem($size);
    font-size: max(rem($size), 10px);
  }
}
/* sp-only ------------*/
@mixin media_narrow {
  @media screen and (max-width: 767px) {
    @content;
  }
}
/* pc-only ------------*/
@mixin media_wide {
  @media screen and (min-width: 768px) {
    @content;
  }
}
/* hover-only ------------*/
@mixin media_hover {
  @media (any-hover: hover) {
    @content;
  }
}
/* flex ------------*/
@mixin flex {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;
}
/* Font Awesome 疑似要素 ------------*/
@mixin fa5($weight: 900) {
  font-family: "Font Awesome 5 Free";
  font-weight: $weight;
  font-style: normal;
  font-variant: normal;
  line-height: 1;
  display: inline-block;
  height: 1em;
}
/* Edge用 ------------*/
@mixin edge_only {
  @supports (-ms-ime-align: auto) {
    /* Edge のみ適用される */
    @content;
  }
}
/* IE用 ------------*/
@mixin ie_only {
  @media (-ms-high-contrast: none), (-ms-high-contrast: active) {
    @content;
  }
}
/* Safari用 ------------*/
@mixin safari_only {
  // 擬似要素には効きません
  &_::-webkit-full-page-media,
  _:future,
  :root & {
    @content;
  }
  @supports (paint-order: fill) and (-webkit-marquee-speed: 0) {
    @content;
  }
}

// ダミーの箇所を可視化
@mixin dummy {
  color: #f00 !important;
  outline: rem(2) dashed #f00 !important;
  background-color: #ff0 !important;
}

/* Font styles ------------*/
@mixin font-family {
  font-family:
    "ShinGoPro",
    Hiragino Sans,
    "ヒラギノ角ゴシック",
    Hiragino Kaku Gothic ProN,
    "ヒラギノ角ゴ ProN W3",
    "メイリオ",
    Meiryo;
  // font-family:
  //   Hiragino Sans,
  //   "ヒラギノ角ゴシック",
  //   Hiragino Kaku Gothic ProN,
  //   "ヒラギノ角ゴ ProN W3",
  //   "メイリオ",
  //   Meiryo;
  /*font-family: '游ゴシック体', YuGothic, 'Yu Gothic Medium', 'メイリオ', sans-serif;*/
  /*font-family: 'Noto Sans JP', Hiragino Sans, 'ヒラギノ角ゴシック', Hiragino Kaku Gothic ProN, 'ヒラギノ角ゴ ProN W3', 'メイリオ', Meiryo, sans-serif;*/
}

@mixin ff-03smart {
  font-family: "03SmartFontUI";
}
@mixin ff-851gkktt {
  font-family: "851Gkktt_005";
}

.ff-03smart {
  @include ff-03smart;
}
.ff-851gkktt {
  @include ff-851gkktt;
}

@mixin txt-basic {
  @include fz(15);
  line-height: 2;
  font-weight: normal;
  font-style: normal;
  letter-spacing: 0.05em;
  @include media_narrow {
    @include fz(13);
    line-height: 1.8;
    letter-spacing: 0.05em;
  }
}

@mixin txt-basic--bold {
  @include txt-basic;
  font-weight: 700;
}

@mixin txt-small {
}

@mixin ttl-01 {
  @include fz(25);
  line-height: 1.5;
  letter-spacing: 0.1em;
  font-weight: bold;
  @include media_narrow {
    @include fz(24);
    line-height: 1.7;
    letter-spacing: 0.1em;
  }
}

/* Color styles ------------*/
$c-red: #ff3035;
$c-gray: #ddd;
$c-palegray: #f5f5f5;
$c-lightgray: #f5f5f3;
$c-white: #fff;
$c-black: #000;

$c-blue: #285795;
$c-pink: #dd4286;

/*------------------------------------------------
other
------------------------------------------------*/
// [w1000]:PC_ONLY
@mixin w1000 {
  @include media_wide {
    width: rem(1000);
    margin-left: auto;
    margin-right: auto;
  } /* PC only ------------ */
}

// [inner]:SP_ONLY
@mixin inner {
  @include media_narrow {
    width: rem(345);
    margin-left: auto;
    margin-right: auto;
  } /* SP only ------------ */
}

// ・
// リストなどで使用します。
// 自動でインデントが付きます。
// インデントを外す場合は第1引数にtrueを指定してください。
// 第2引数にインデントサイズを指定できます。
@mixin dot($isIndent: false, $indentSize: 1) {
  @if $isIndent != true {
    @include indent($indentSize);
  }
  &::before {
    content: "\30FB";
  } /* before ------------*/
}

// ●
// リストなどで使用します。
// 自動でインデントが付きます。
// インデントを外す場合は第1引数にtrueを指定してください。
// 第2引数にインデントサイズを指定できます。
@mixin maru($isIndent: false, $indentSize: 1) {
  @if $isIndent != true {
    @include indent($indentSize);
  }
  &::before {
    content: "\25CF";
  } /* before ------------*/
}

// ※
// リストなどで使用します。
// 自動でインデントが付きます。
// インデントを外す場合は第1引数にtrueを指定してください。
// 第2引数にインデントサイズを指定できます。
@mixin kome($isIndent: false, $indentSize: 1) {
  @if $isIndent != true {
    @include indent($indentSize);
  }
  &::before {
    content: "\203B";
  } /* before ------------*/
}

@mixin indent($indentSize: 1) {
  padding-left: #{$indentSize}em;
  text-indent: -#{$indentSize}em;
}

@mixin of-cover {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

// テキストオーバーフロー
// 引数に行数を指定してください。
@mixin txt-clamp($row: 1) {
  // 引数が数値以外だったらエラーを返す
  @if type-of($row) != "number" {
    @error 'txt-clampの引数は必ず数値で指定してください';
  }

  @if $row == 1 {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  } @else {
    display: -webkit-box;
    min-height: 0;
    -webkit-line-clamp: $row;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
}

// 文字の縦書き
// writing-mode は、縦書き、横書きの方向を指定するCSSプロパティです。
@mixin txt-vertical {
  // writing-mode: horizontal-tb; // 通常のテキスト。横書き、行は上から下
  // writing-mode: vertical-rl; // 縦書き、列は右から左
  writing-mode: vertical-lr; // 縦書き、列は左から右
}

// text-orientationは、縦書きの中の文字を回転させます。
// 縦書き文章中のアルファベットは横向きのまま表示されますが、
// text-orientationを使用することで、アルファベットも縦書きにすることができます。
@mixin txt-orientation {
  text-orientation: upright;
}

// text-combine を利用すると、１文字分のスペースに複数の文字を表示できるようになります。
// これを利用すると、縦書きの中に横書きの文字を入れ、縦中横（たてちゅうよこ）と呼ばれるレイアウトを作成することができます。
@mixin txt-combine {
  text-combine-upright: all; // Firefox
  text-combine: horizontal; // Chrome, Safari
}
